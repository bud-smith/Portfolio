{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Bud\\\\Desktop\\\\test001\\\\portfolio\\\\components\\\\AcademicProjects.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\n\nvar AcademicProjects = /*#__PURE__*/function (_Component) {\n  _inherits(AcademicProjects, _Component);\n\n  var _super = _createSuper(AcademicProjects);\n\n  function AcademicProjects(props) {\n    var _this;\n\n    _classCallCheck(this, AcademicProjects);\n\n    _this = _super.call(this, props);\n    _this.state = [{\n      id: 0,\n      name: \"N-Queens\",\n      category: \"Artificial Intelligence\",\n      description: \"N-Queens is the problem of placing n number of queens on a chessboard of size n×n in which no queens can attack each other. This implementation uses an uninformed search strategy to find all solutions being breadth-first search (BFS), and two local search strategies to find a single solution being hill-climbing search and simulated annealing (SA) search.\",\n      technologies: [\"C++\"],\n      demo: \"https://n-queens.buds1.repl.run/\",\n      source: \"https://github.com/bud-smith/University-Projects/tree/main/N-Queens\"\n    }, {\n      id: 1,\n      name: \"Alarm Surgo\",\n      category: \"Hybrid Mobile Application\",\n      description: \"Alarm Surgo is a hybrid mobile application. The apps features include creating, editing, and deleting alarms, checking the latest news and weather using various public API's, and choosing a personalised location to view the news and weather from anywhere in the world.\",\n      technologies: [\"Angular\", \"Ionic\", \"TypeScript\", \"HTML5\", \"CSS\"],\n      demo: \"https://appetize.io/app/dadcbhk6xkj3p3gf5cv35xxjfc?device=pixel4xl&scale=75&orientation=portrait&osVersion=10.0&deviceColor=black\",\n      source: \"https://github.com/bud-smith/University-Projects/tree/main/Alarm-Surgo\"\n    }];\n    return _this;\n  }\n\n  _createClass(AcademicProjects, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"academic-projects\",\n        className: \"project-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"centre-text\",\n          children: \"Academic Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"centre-text\",\n          children: \"This is a set of my notable academic projects/assignments.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return AcademicProjects;\n}(Component);\n\nexport default AcademicProjects;","map":{"version":3,"sources":["C:/Users/Bud/Desktop/test001/portfolio/components/AcademicProjects.tsx"],"names":["React","Component","AcademicProjects","props","state","id","name","category","description","technologies","demo","source"],"mappings":";;;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAcMC,gB;;;;;AACF,4BAAYC,KAAZ,EAA0C;AAAA;;AAAA;;AACtC,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa,CACT;AACIC,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAE,UAFV;AAGIC,MAAAA,QAAQ,EAAE,yBAHd;AAIIC,MAAAA,WAAW,EAAE,sWAJjB;AAKIC,MAAAA,YAAY,EAAE,CAAC,KAAD,CALlB;AAMIC,MAAAA,IAAI,EAAE,kCANV;AAOIC,MAAAA,MAAM,EAAE;AAPZ,KADS,EAUT;AACIN,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAE,aAFV;AAGIC,MAAAA,QAAQ,EAAE,2BAHd;AAIIC,MAAAA,WAAW,EAAE,8QAJjB;AAKIC,MAAAA,YAAY,EAAE,CAAC,SAAD,EAAY,OAAZ,EAAqB,YAArB,EAAmC,OAAnC,EAA4C,KAA5C,CALlB;AAMIC,MAAAA,IAAI,EAAE,mIANV;AAOIC,MAAAA,MAAM,EAAE;AAPZ,KAVS,CAAb;AAHsC;AAuBzC;;;;6BAEQ;AACL,0BACI;AAAK,QAAA,EAAE,EAAC,mBAAR;AAA4B,QAAA,SAAS,EAAC,aAAtC;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH;;;;EAjC0BV,S;;AAoC/B,eAAeC,gBAAf","sourcesContent":["import styles from '../styles/Home.module.css';\r\nimport React, { Component } from 'react';\r\nimport AcademicProjectsCardContainer from './AcademicProjectsCardContainer';\r\n\r\ninterface IAcademicProjectsList {\r\n    [index: number]: {\r\n        id?: number,\r\n        name?: string,\r\n        description?: string,\r\n        technologies?: string,\r\n        demo?: string,\r\n        source?: string\r\n    }\r\n}\r\n\r\nclass AcademicProjects extends Component {\r\n    constructor(props: IAcademicProjectsList) {\r\n        super(props);\r\n\r\n        this.state = [\r\n            {\r\n                id: 0,\r\n                name: \"N-Queens\",\r\n                category: \"Artificial Intelligence\",\r\n                description: \"N-Queens is the problem of placing n number of queens on a chessboard of size n×n in which no queens can attack each other. This implementation uses an uninformed search strategy to find all solutions being breadth-first search (BFS), and two local search strategies to find a single solution being hill-climbing search and simulated annealing (SA) search.\",\r\n                technologies: [\"C++\"],\r\n                demo: \"https://n-queens.buds1.repl.run/\",\r\n                source: \"https://github.com/bud-smith/University-Projects/tree/main/N-Queens\"\r\n            },\r\n            {\r\n                id: 1,\r\n                name: \"Alarm Surgo\",\r\n                category: \"Hybrid Mobile Application\",\r\n                description: \"Alarm Surgo is a hybrid mobile application. The apps features include creating, editing, and deleting alarms, checking the latest news and weather using various public API's, and choosing a personalised location to view the news and weather from anywhere in the world.\",\r\n                technologies: [\"Angular\", \"Ionic\", \"TypeScript\", \"HTML5\", \"CSS\"],\r\n                demo: \"https://appetize.io/app/dadcbhk6xkj3p3gf5cv35xxjfc?device=pixel4xl&scale=75&orientation=portrait&osVersion=10.0&deviceColor=black\",\r\n                source: \"https://github.com/bud-smith/University-Projects/tree/main/Alarm-Surgo\"\r\n            }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"academic-projects\" className=\"project-div\">\r\n                <h1 className=\"centre-text\">Academic Projects</h1>\r\n                <p className=\"centre-text\">This is a set of my notable academic projects/assignments.</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AcademicProjects;"]},"metadata":{},"sourceType":"module"}